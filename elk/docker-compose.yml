version: '2.2'

services:

  elasticsearch:
    image: elastic/elasticsearch:6.6.0
    container_name: elasticsearch
    environment:
      - cluster.name=docker-cluster
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - elasticsearch_data:/usr/share/elasticsearch/data
    ports:
      - 9200:9200
    healthcheck:
      test: ["CMD", "curl", "localhost:9200/_cat/health" ]
      timeout: 10s
      retries: 5

  kibana:
      image: elastic/kibana:6.6.0
      container_name: kibana
      environment:
        ELASTICSEARCH_URL: "http://elasticsearch:9200"
      ports:
        - 5601:5601
      healthcheck:
        test: ["CMD", "curl", "localhost:5601/status" ]
        timeout: 10s
        retries: 5
      depends_on:
        filebeat:
            condition: service_healthy

  nginx:
      build:
        dockerfile: Dockerfile-nginx
        context: .
      container_name: nginx
      environment:
        - KIBANA_HOST=kibana
        - KIBANA_PORT=5601
      ports:
        - 80:80
      healthcheck:
        test: ["CMD", "curl", "127.0.0.1/nginx_status" ]
        timeout: 10s
        retries: 5
      depends_on:
        kibana:
           condition: service_healthy
      command: /bin/bash -c "envsubst < /etc/nginx/conf.d/default.template > /etc/nginx/conf.d/default.conf && exec nginx -g 'daemon off;'"

  filebeat:
      build:
        dockerfile: Dockerfile-filebeat
        context: .
      container_name: filebeat
      volumes:
        # needed to access all docker logs (read only) :
        - '/var/lib/docker/containers/:/var/lib/docker/containers:ro'
        # # needed to persist filebeat tracking data
        - "filebeat_data:/usr/share/filebeat/data"
      #environment:
        #- LOGSTASH_HOST=logstash
        #- LOGSTASH_PORT=5044
        #- output.elasticsearch.enable='false'
        #- output.logstash.hosts=["logstash:5044"]
      # https://www.elastic.co/guide/en/beats/filebeat/current/http-endpoint.html
      healthcheck:
        test: ["CMD", "curl", "localhost:5066/?pretty" ]
        timeout: 10s
        retries: 5
      depends_on:
        logstash:
            condition: service_healthy


  logstash:
    build:
      dockerfile: Dockerfile-logstash
      context: .
    container_name: logstash
    #environment:
    #  - ELASTICSEARCH_HOST=elasticsearch
    #  - ELASTICSEARCH_PORT=9200
    ports:
      - 5044:5044
    healthcheck:
      test: ["CMD", "curl", "localhost:9600/?pretty" ]
      timeout: 10s
      retries: 5
    depends_on:
      elasticsearch:
        condition: service_healthy

# Stats & Metric container
# Off site Backup container

volumes:
  elasticsearch_data:
    driver: local
  filebeat_data:
